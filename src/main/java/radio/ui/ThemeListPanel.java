package radio.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.util.Observable;
import java.util.Observer;

public class ThemeListPanel implements ApplicationWindow, Observer {

    private JPanel background;
    private JPanel searchPane;
    private JButton newThemeButton;
    private JTextField searchField;
    private JButton searchButton;
    private JScrollPane listPane;
    private JList themeListPanel;

    private ThemesController controller;

    ThemeListPanel(ThemesController cont) {
        this.controller = cont;
        $$$setupUI$$$();
        newThemeButton.addActionListener(e -> {
            NewThemeDialog dialog = new NewThemeDialog(controller);
            dialog.pack();
            dialog.setVisible(true);
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        background = new JPanel();
        background.setLayout(new BorderLayout(0, 0));
        searchPane = new JPanel();
        searchPane.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        background.add(searchPane, BorderLayout.NORTH);
        newThemeButton = new JButton();
        newThemeButton.setText("+");
        searchPane.add(newThemeButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        searchField = new JTextField();
        searchPane.add(searchField, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        searchButton = new JButton();
        searchButton.setText("Search");
        searchPane.add(searchButton, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        searchPane.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        listPane = new JScrollPane();
        background.add(listPane, BorderLayout.CENTER);
        themeListPanel = new JList();
        listPane.setViewportView(themeListPanel);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return background;
    }

    @Override
    public void update(Observable o, Object arg) {

    }

    @Override
    public JPanel getPanelHandler() {
        return (JPanel) $$$getRootComponent$$$();
    }
}
